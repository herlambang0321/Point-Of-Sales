<%- include('../partials/header')%>

    <!-- Begin Page Content -->
    <div class="container-fluid">

        <!-- Page Heading -->
        <div class="d-sm-flex align-items-center justify-content-between mb-4">
            <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
            <button type="submit" onclick="exportTableToCSV('report.csv')"
                class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"><i
                    class="fas fa-download fa-sm text-white-50"></i> Generate Report</button>
        </div>

        <div class="card">
            <div class="card-header">
                <h6 class="m-0 font-weight-bold text-primary">Date Settings</h6>
            </div>

            <form action="" method="get">
                <div class="card-body">
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="startdate" class="form-label">Start Date</label>
                            <input type="date" class="form-control" id="startdate" name="startdate"
                                value="<%= query.startdate %>">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="enddate" class="form-label">End Date</label>
                            <input type="date" class="form-control" id="enddate" name="enddate"
                                value="<%= query.enddate %>">
                        </div>
                    </div>
                </div>

                <div class="card-footer">
                    <button type="submit" class="btn btn-success btn-icon-split">
                        <span class="icon text-white-50">
                            <i class="fas fa-check"></i>
                        </span>
                        <span class="text">Query</span>
                    </button>

                    <a href="/dashboards" class="btn btn-warning btn-icon-split">
                        <span class="icon text-white-50">
                            <i class="fas fa-arrow-left"></i>
                        </span>
                        <span class="text">Reset</span>
                    </a>
                </div>
            </form>
        </div>
        <br />

        <!-- Content Row -->
        <div class="row">

            <!-- PURCHASES Card Example -->
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                    PURCHASES</div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    <%= new Intl.NumberFormat('id', { style: 'currency' , currency: 'IDR'
                                        }).format(purchases[0].total) %>
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-calendar fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- SALES Card Example -->
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-success shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                    SALES</div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    <%= new Intl.NumberFormat('id', { style: 'currency' , currency: 'IDR'
                                        }).format(sales[0].total) %>
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- EARNINGS Card Example -->
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-success shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                    EARNINGS</div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    <%= new Intl.NumberFormat('id', { style: 'currency' , currency: 'IDR'
                                        }).format(sales[0].total - purchases[0].total ) %>
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- TOTAL SALES Card Example -->
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-warning shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                    TOTAL SALES</div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    <%= salesTotal[0].total %>
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-comments fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Content Row -->
        <div class="row">

            <!-- Line Chart -->
            <div class="col-xl-8 col-lg-7">
                <div class="card shadow mb-4">
                    <!-- Card Header - Dropdown -->
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                        <h6 class="m-0 font-weight-bold text-primary">Earnings Overview</h6>
                        <div class="dropdown no-arrow">
                            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                aria-labelledby="dropdownMenuLink">
                                <div class="dropdown-header">Dropdown Header:</div>
                                <a class="dropdown-item" href="#">Action</a>
                                <a class="dropdown-item" href="#">Another action</a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="#">Something else here</a>
                            </div>
                        </div>
                    </div>
                    <!-- Card Body -->
                    <div class="card-body">
                        <div class="chart-area">
                            <canvas id="lineChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- doughnut Chart -->
            <div class="col-xl-4 col-lg-5">
                <div class="card shadow mb-4">
                    <!-- Card Header - Dropdown -->
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                        <h6 class="m-0 font-weight-bold text-primary">Revenue Sources</h6>
                        <div class="dropdown no-arrow">
                            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                aria-labelledby="dropdownMenuLink">
                                <div class="dropdown-header">Dropdown Header:</div>
                                <a class="dropdown-item" href="#">Action</a>
                                <a class="dropdown-item" href="#">Another action</a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="#">Something else here</a>
                            </div>
                        </div>
                    </div>
                    <!-- Card Body -->
                    <div class="card-body">
                        <div class="chart-pie pt-4 pb-2">
                            <canvas id="doughnutChart"></canvas>
                        </div>
                        <div class="mt-4 text-center small">
                            <span class="mr-2">
                                <i class="fas fa-circle text-primary"></i> Direct
                            </span>
                            <span class="mr-2">
                                <i class="fas fa-circle text-success"></i> Customer
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h6 class="m-0 font-weight-bold text-primary">Earnings Monthly Report</h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Monthly</th>
                                <th>Expense</th>
                                <th>Revenue</th>
                                <th>Earning</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% data.forEach(item=> { %>
                                <tr>
                                    <td>
                                        <%= item.monthly %>
                                    </td>
                                    <td class="right-position">
                                        <%= new Intl.NumberFormat('id', { style: 'currency' , currency: 'IDR'
                                            }).format(item.expense) %>
                                    </td>
                                    <td class="right-position">
                                        <%= new Intl.NumberFormat('id', { style: 'currency' , currency: 'IDR'
                                            }).format(item.revenue) %>
                                    </td>
                                    <td class="right-position">
                                        <%= new Intl.NumberFormat('id', { style: 'currency' , currency: 'IDR'
                                            }).format(item.revenue - item.expense) %>
                                    </td>
                                </tr>
                                <% }) %>
                        </tbody>
                        <tfoot>
                            <tr>
                                <th>Total</th>
                                <% purchases.forEach(item=> { %>
                                    <th class="right-position">
                                        <%= new Intl.NumberFormat('id', { style: 'currency' , currency: 'IDR'
                                            }).format(item.total) %>
                                    </th>
                                    <% }) %>
                                        <% sales.forEach(item=> { %>
                                            <th class="right-position">
                                                <%= new Intl.NumberFormat('id', { style: 'currency' , currency: 'IDR'
                                                    }).format(item.total) %>
                                            </th>
                                            <% }) %>
                                                <% purchases.forEach(purchases=> { %>
                                                    <% sales.forEach(sales=> { %>
                                                        <th class="right-position">
                                                            <%= new Intl.NumberFormat('id', { style: 'currency' ,
                                                                currency: 'IDR' }).format(sales.total - purchases.total)
                                                                %>
                                                        </th>
                                                        <% }) %>
                                                            <% }) %>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
        <br />

    </div>
    <!-- /.container-fluid -->

    <script>
        $(document).ready(function () {
            readsData()
            readData()

            $('#dataTable').DataTable({
                "lengthMenu": [[3, 10, 100], [3, 10, 100]],
                // "order": [[0]],
                "aaSorting": [],
                "columnDefs": [
                    {
                        "targets": [0],
                        "orderable": false
                    }
                ]
            });
        });

        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';

        function number_format(number, decimals, dec_point, thousands_sep) {
            // *     example: number_format(1234.56, 2, ',', ' ');
            // *     return: '1 234,56'
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }

        // Line Chart Example
        const readsData = () => {
            $.ajax({
                data: {
                    startdate: $('#startdate').val(),
                    enddate: $('#enddate').val()
                },
                url: 'dashboards/chart'
            }).done((res) => {
                const { getMonth, income } = res
                const line = $('#lineChart');
                new Chart(line, {
                    type: 'line',
                    data: {
                        labels: getMonth,
                        datasets: [{
                            label: "Earnings",
                            lineTension: 0.3,
                            backgroundColor: "rgba(78, 115, 223, 0.05)",
                            borderColor: "rgba(78, 115, 223, 1)",
                            pointRadius: 3,
                            pointBackgroundColor: "rgba(78, 115, 223, 1)",
                            pointBorderColor: "rgba(78, 115, 223, 1)",
                            pointHoverRadius: 3,
                            pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                            pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                            pointHitRadius: 10,
                            pointBorderWidth: 2,
                            data: income,
                        }],
                    },
                    options: {
                        maintainAspectRatio: false,
                        layout: {
                            padding: {
                                left: 10,
                                right: 25,
                                top: 25,
                                bottom: 0
                            }
                        },
                        scales: {
                            xAxes: [{
                                time: {
                                    unit: 'date'
                                },
                                gridLines: {
                                    display: false,
                                    drawBorder: false
                                },
                                ticks: {
                                    maxTicksLimit: 7
                                }
                            }],
                            yAxes: [{
                                ticks: {
                                    maxTicksLimit: 5,
                                    padding: 10,
                                    // Include a dollar sign in the ticks
                                    callback: function (value, index, values) {
                                        return 'Rp ' + number_format(value);
                                    }
                                },
                                gridLines: {
                                    color: "rgb(234, 236, 244)",
                                    zeroLineColor: "rgb(234, 236, 244)",
                                    drawBorder: false,
                                    borderDash: [2],
                                    zeroLineBorderDash: [2]
                                }
                            }],
                        },
                        legend: {
                            display: false
                        },
                        tooltips: {
                            backgroundColor: "rgb(255,255,255)",
                            bodyFontColor: "#858796",
                            titleMarginBottom: 10,
                            titleFontColor: '#6e707e',
                            titleFontSize: 14,
                            borderColor: '#dddfeb',
                            borderWidth: 1,
                            xPadding: 15,
                            yPadding: 15,
                            displayColors: false,
                            intersect: false,
                            mode: 'index',
                            caretPadding: 10,
                            callbacks: {
                                label: function (tooltipItem, chart) {
                                    var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                    return datasetLabel + ': Rp' + number_format(tooltipItem.yLabel);
                                }
                            }
                        }
                    }
                });
            })
        }

        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';

        // doughnut Chart Example
        const readData = () => {
            let countDirect = null
            let countMember = null

            $.ajax({
                data: {
                    startdate: $('#startdate').val(),
                    enddate: $('#enddate').val()
                },
                url: 'dashboards/chart'
            }).done((res) => {
                const { direct, member } = res
                countDirect = direct[0].count
                countMember = member[0].count

                const doughnut = $('#doughnutChart');
                new Chart(doughnut, {
                    type: 'doughnut',
                    data: {
                        labels: ["Direct", "Member"],
                        datasets: [{
                            data: [countDirect, countMember],
                            backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],
                            hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],
                            hoverBorderColor: "rgba(234, 236, 244, 1)",
                        }],
                    },
                    options: {
                        maintainAspectRatio: true,
                        tooltips: {
                            backgroundColor: "rgb(255,255,255)",
                            bodyFontColor: "#858796",
                            borderColor: '#dddfeb',
                            borderWidth: 1,
                            xPadding: 15,
                            yPadding: 15,
                            displayColors: false,
                            caretPadding: 10,
                        },
                        legend: {
                            display: false
                        },
                        cutoutPercentage: 80,
                    },
                });
            })
        }

        //user-defined function to download CSV file
        function downloadCSV(csv, filename) {
            var csvFile;
            var downloadLink;

            //define the file type to text/csv
            csvFile = new Blob([csv], { type: 'text/csv' });
            downloadLink = document.createElement("a");
            downloadLink.download = filename;
            downloadLink.href = window.URL.createObjectURL(csvFile);
            downloadLink.style.display = "none";

            document.body.appendChild(downloadLink);
            downloadLink.click();
        }

        //user-defined function to export the data to CSV file format
        function exportTableToCSV(filename) {
            //declare a JavaScript variable of array type
            var csv = [];
            var rows = document.querySelectorAll("table");

            //merge the whole data in tabular form 
            for (var i = 0; i < rows.length; i++) {
                var row = [], cols = rows[i].querySelectorAll("thead, tbody");
                for (var j = 0; j < cols.length; j++)
                    row.push(cols[j].innerText);
                csv.push(row.join(" "));
            }
            //call the function to download the CSV file
            downloadCSV(csv.join("\n"), filename);
        }

    </script>

    </div>
    <!-- End of Main Content -->

    <%- include('../partials/footer')%>